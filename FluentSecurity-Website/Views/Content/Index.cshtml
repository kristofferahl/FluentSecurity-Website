@model IndexPageModel
@{
    ViewBag.Title = "Fluent Security : Fluent security configuration for ASP.NET MVC";
}
@section Highlights {
	<div class="col">
		<h2>Learn more</h2>
		<p>Getting started with Fluent Security is easy. You'll be up and running in minutes.</p>
		<a class="link" href="@Html.Raw(Url.Action<ContentController>(x => x.GettingStarted()))">Learn more</a>
	</div>
	<div class="col">
		<h2>NuGet</h2>
		<p>The easiest way to get started is to install Fluent Security via NuGet. Search for FluentSecurity in the "Add library reference" dialog or install it through the package manager console in Visual Studio.<br /><code>PM&gt; Install-Package FluentSecurity</code></p>
		<a class="link" href="http://nuget.org/List/Packages/FluentSecurity">NuGet</a>
	</div>
	<div class="col last">
		<h2>Download</h2>
		<p>If you're not using NuGet you can grab the binaries from Github.</p>
		<a class="link" href="https://github.com/downloads/kristofferahl/FluentSecurity/FluentSecurity-0.9.2.zip">Download</a>
	</div>
}
<div id="why">
	<h2>Why Fluent Security</h2>
	<ul>
		<li class="reason">
			<h3>Code based configuration</h3>
			<p>No attributes or nasty xml cluttering up your code.</p>
		</li>
		<li class="reason">
			<h3>Customizable</h3>
			<p>Don't like what's in the box? Create your own implementations and hook it in using your IoC-container.</p>
		</li>
		<li class="reason">
			<h3>ASP.NET MVC 3 ready</h3>
			<p>Built against the latest version of ASP.NET MVC. Use the built in ASP.NET membership provider or roll your own security.</p>
		</li>
		<li class="reason">
			<h3>Low imprint</h3>
			<p>Fluent Security won't spread like wildfire in your application. Your configuration can be kept in a single file.</p>
		</li>
		<li class="reason">
			<h3>Open</h3>
			<p>Have a need for something not supported by Fluent Security? Fork us on github, do your magic and send us the patch!</p>
		</li>
		<li class="reason">
			<h3>Tested</h3>
			<p>Fluent Security is used successfully in production and has a code coverage of 99%.</p>
		</li>
	</ul>
</div>
<div id="extras">
	<div class="twitter col">
		<h3>FluentSecurity on twitter</h3>
		@foreach (var item in Model.HashtagTweets)
		{
			<div class="article">
				@Html.DisplayFor(x => item)
			</div>
		}
	</div>
	<div class="issues col">
		<h3>Issues &amp; feature requests</h3>
		@foreach (var item in Model.Issues)
		{
			<div class="article">
				<p class="date">@item.Created</p>
				<p class="author">@item.User</p>
				<h4><a href="@item.Url">@item.Id - @item.Title</a></h4>
				<p class="short">@item.Text</p>
			</div>
		}
	</div>
	<div class="commits col last">
		<h3>Github commits (develop)</h3>
		@foreach (var item in Model.Commits)
		{
			<div class="article">
				<p class="date">@item.Date</p>
				<p class="author">@item.Author</p>
				<h4><a href="@item.Url">@item.Id</a></h4>
				<p class="short">@item.Message</p>
			</div>
		}
	</div>
</div>